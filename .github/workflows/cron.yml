name: Cronjob
env:
  DB: pgsql
  TESTSUITE: cron
  
on:
  push:
    branches: [ 2020/jan/gha1 ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    name: CI

    runs-on: Ubuntu-20.04

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: postgres
          POSTGRES_HOST: localhost
          POSTGRES_PASSWORD: password
          POSTGRES_USER: postgres
        ports:
          - 5432:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
          
    steps:
    - uses: actions/checkout@v2

    - name: Make dummy artifact file
      run: |
        mkdir -p output/test
        date >   output/test/output1.txt
        BASEDIR=$(pwd)
        export BASEDIR

    - name: Setup PHP with selected extensions
      uses: shivammathur/setup-php@v2
      with:
        php-version: '7.2'
        extensions: mbstring, pdo_mysql, pdo_pgsql, pgsql
        ini-values: max_input_time=3600,upload_max_filesize=2047M,post_max_size=2146445312,session.cookie_secure=On,session.cookie_httponly=On

    - name: setup machine for FileSender
      run: ci/setup-machine.sh
      env:
        POSTGRES_HOST: localhost
        POSTGRES_PORT: 5432

    - name: Install composer.json packages
      run: |
        composer self-update
        composer update --no-interaction

    - name: run cron job
      run: |
        echo testing cron job
        echo "BASEDIR $BASEDIR"
        pwd
        php scripts/task/cron.php --testing-mode
        echo "cron job complete"

    - name: Log file
      uses: actions/upload-artifact@v2
      with:
        name: Log-file-report
        path: output/test/output1.txt

    - name: FileSender Log files
      uses: actions/upload-artifact@v2
      with:
        name: Log-files
        path: log


    # Add a test script to composer.json, for instance: "test": "vendor/bin/phpunit"
    # Docs: https://getcomposer.org/doc/articles/scripts.md

    # - name: Run test suite
    #   run: composer run-script test
